generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id                  String          @id @default(cuid())
  name                String?
  email               String          @unique
  emailVerified       DateTime?
  image               String?
  password            String?
  role                UserRole        @default(USER)
  accounts            Account[]
  sessions            Session[]
  twoFactorConf       TwoFactorConfirmation?
  isTwoFactorEnabled  Boolean    @default(false)
  
  // Optional for WebAuthn support
  // Authenticator Authenticator[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  email     String
  token     String
  expires   DateTime
 
  @@id([email, token])
}
//separate Password Reset from Verification token for security purposes
model PasswordResetToken {
  id         String    @id @default(cuid())
  email      String    @unique
  token      String    @unique
  expires    DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id         String     @id @default(cuid())
  email      String     @unique
  token      String     @unique
  expires    DateTime

  @@unique([email, token])
}

//TODO Add expiration of confirmation and track by device/app
model TwoFactorConfirmation {
  id         String    @id @default(cuid())
  userId     String    
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId])
}
